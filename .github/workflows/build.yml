name: Build and Release Assets

on:
  release:
    types: [created]

jobs:
  build-and-upload:
    name: Build and Upload Release Assets (${{ matrix.platform }}-${{ matrix.arch }})
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
            arch: amd64
          - os: ubuntu-latest
            platform: linux
            arch: arm64
          - os: windows-latest
            platform: windows
            arch: amd64
          - os: macos-13
            platform: darwin
            arch: amd64
          - os: macos-latest
            platform: darwin
            arch: arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.23"

      - name: Set environment variables
        run: |
          echo "GOOS=${{ matrix.platform }}" >> $GITHUB_ENV
          echo "GOARCH=${{ matrix.arch }}" >> $GITHUB_ENV
          echo "CGO_ENABLED=1" >> $GITHUB_ENV
        shell: bash

      - name: Install dependencies (Linux arm64)
        if: matrix.os == 'ubuntu-latest' && matrix.arch == 'arm64'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu
          echo "CC=aarch64-linux-gnu-gcc" >> $GITHUB_ENV
        shell: bash

      - name: Build binary
        run: |
          EXTENSION=""
          if [ "${{ matrix.platform }}" = "windows" ]; then
            EXTENSION=".exe"
          fi

          BINARY_NAME="pinai-${{ matrix.platform }}-${{ matrix.arch }}-${{ github.event.release.tag_name }}${EXTENSION}"
          go build -ldflags="-s -w" -o "$BINARY_NAME" .
        shell: bash

      - name: Create archive files (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          $binaryName = "pinai-${{ matrix.platform }}-${{ matrix.arch }}-${{ github.event.release.tag_name }}.exe"
          Compress-Archive -Path $binaryName -DestinationPath "pinai-${{ matrix.platform }}-${{ matrix.arch }}-${{ github.event.release.tag_name }}.zip"
        shell: powershell

      - name: Create archive files (non-Windows)
        if: matrix.os != 'windows-latest'
        run: |
          BINARY_NAME="pinai-${{ matrix.platform }}-${{ matrix.arch }}-${{ github.event.release.tag_name }}"
          tar -czf "$BINARY_NAME.tar.gz" "$BINARY_NAME"
        shell: bash

      - name: Create checksum file (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          certutil -hashfile "pinai-${{ matrix.platform }}-${{ matrix.arch }}-${{ github.event.release.tag_name }}.zip" SHA256 > "pinai-${{ matrix.platform }}-${{ matrix.arch }}-${{ github.event.release.tag_name }}-checksum.txt"
        shell: cmd

      - name: Create checksum file (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sha256sum "pinai-${{ matrix.platform }}-${{ matrix.arch }}-${{ github.event.release.tag_name }}.tar.gz" > "pinai-${{ matrix.platform }}-${{ matrix.arch }}-${{ github.event.release.tag_name }}-checksum.txt"
        shell: bash

      - name: Create checksum file (macOS)
        if: startsWith(matrix.os, 'macos')
        run: |
          shasum -a 256 "pinai-${{ matrix.platform }}-${{ matrix.arch }}-${{ github.event.release.tag_name }}.tar.gz" > "pinai-${{ matrix.platform }}-${{ matrix.arch }}-${{ github.event.release.tag_name }}-checksum.txt"
        shell: bash

      - name: Upload release assets
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.release.tag_name }}
          files: |
            pinai-${{ matrix.platform }}-${{ matrix.arch }}-${{ github.event.release.tag_name }}.zip
            pinai-${{ matrix.platform }}-${{ matrix.arch }}-${{ github.event.release.tag_name }}.tar.gz
            pinai-${{ matrix.platform }}-${{ matrix.arch }}-${{ github.event.release.tag_name }}-checksum.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
